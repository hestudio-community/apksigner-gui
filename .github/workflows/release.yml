name: Release Build

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  build-windows:
    strategy:
      matrix:
        include:
          - arch: x64
            os: windows-latest
          - arch: arm64
            os: windows-latest
    runs-on: ${{ matrix.os }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install WiX Toolset
        run: |
          Invoke-WebRequest -Uri "https://github.com/wixtoolset/wix3/releases/download/wix3141rtm/wix314-binaries.zip" -OutFile "wix314-binaries.zip"
          Expand-Archive -Path "wix314-binaries.zip" -DestinationPath "C:\wix"
          echo "C:\wix" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Setup Windows SDK
        run: |
          # Ensure Windows SDK is available for APPX builds
          $sdkPath = Get-ChildItem "C:\Program Files (x86)\Windows Kits\10\bin" -Directory | Sort-Object Name -Descending | Select-Object -First 1
          if ($sdkPath) {
            $sdkBinPath = Join-Path $sdkPath.FullName "x64"
            echo "$sdkBinPath" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
            Write-Host "Added Windows SDK to PATH: $sdkBinPath"
          } else {
            Write-Host "Windows SDK not found"
          }

      - name: Build Windows ${{ matrix.arch }}
        run: |
          # Use PowerShell script for build, handling APPX interaction issues
          if (Test-Path "scripts/build-windows-ci.ps1") {
            .\scripts\build-windows-ci.ps1 -Arch ${{ matrix.arch }}
          } else {
            # Fallback to direct build
            $env:CI = "true"
            $env:ELECTRON_BUILDER_ARCH = "${{ matrix.arch }}"
            $env:ELECTRON_BUILDER_ALLOW_UNRESOLVED_DEPENDENCIES = "true"
            npm run make
          }
        shell: pwsh

      - name: Upload Windows ${{ matrix.arch }} artifacts
        uses: actions/upload-artifact@v4
        with:
          name: apksignergui_${{ github.ref_name || 'dev' }}_${{ matrix.arch == 'x64' && 'amd64' || matrix.arch }}_windows
          path: ./out/make/**/*

  build-macos:
    strategy:
      matrix:
        include:
          - arch: x64
            os: macos-13
          - arch: arm64
            os: macos-latest
    runs-on: ${{ matrix.os }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build macOS ${{ matrix.arch }}
        run: npm run make
        env:
          ELECTRON_BUILDER_ARCH: ${{ matrix.arch }}
          CI: true

      - name: Upload macOS ${{ matrix.arch }} artifacts
        uses: actions/upload-artifact@v4
        with:
          name: apksignergui_${{ github.ref_name || 'dev' }}_${{ matrix.arch == 'x64' && 'amd64' || matrix.arch }}_macos
          path: ./out/make/**/*

  build-linux:
    strategy:
      matrix:
        include:
          - arch: x64
            os: ubuntu-latest
          - arch: arm64
            os: ubuntu-latest
    runs-on: ${{ matrix.os }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build Linux ${{ matrix.arch }}
        run: npm run make
        env:
          ELECTRON_BUILDER_ARCH: ${{ matrix.arch }}
          CI: true

      - name: Upload Linux ${{ matrix.arch }} artifacts
        uses: actions/upload-artifact@v4
        with:
          name: apksignergui_${{ github.ref_name || 'dev' }}_${{ matrix.arch == 'x64' && 'amd64' || matrix.arch }}_linux
          path: ./out/make/**/*

  release:
    if: github.event_name == 'release'
    needs: [build-windows, build-macos, build-linux]
    runs-on: ubuntu-latest
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        
      - name: Upload release assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            **/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}