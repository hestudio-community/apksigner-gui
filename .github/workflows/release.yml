name: Release Build

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  build-windows:
    strategy:
      matrix:
        include:
          - arch: x64
            os: windows-latest
          - arch: arm64
            os: windows-11-arm
    runs-on: ${{ matrix.os }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install WiX Toolset
        if: matrix.os == 'windows-latest' || matrix.os == 'windows-11-arm'
        run: |
          Invoke-WebRequest -Uri "https://github.com/wixtoolset/wix3/releases/download/wix3141rtm/wix314-binaries.zip" -OutFile "wix314-binaries.zip"
          Expand-Archive -Path "wix314-binaries.zip" -DestinationPath "C:\wix"
          echo "C:\wix" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Build Windows ${{ matrix.arch }}
        run: npm run make
        env:
          ELECTRON_BUILDER_ARCH: ${{ matrix.arch }}

      - name: Upload Windows ${{ matrix.arch }} artifacts
        uses: actions/upload-artifact@v4
        with:
          name: apksignergui_${{ github.ref_name || 'dev' }}_${{ matrix.arch == 'x64' && 'amd64' || matrix.arch }}_windows
          path: ./out/make/**/*

  build-macos:
    strategy:
      matrix:
        include:
          - arch: x64
            os: macos-13
          - arch: arm64
            os: macos-latest
    runs-on: ${{ matrix.os }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build macOS ${{ matrix.arch }}
        run: npm run make
        env:
          ELECTRON_BUILDER_ARCH: ${{ matrix.arch }}

      - name: Upload macOS ${{ matrix.arch }} artifacts
        uses: actions/upload-artifact@v4
        with:
          name: apksignergui_${{ github.ref_name || 'dev' }}_${{ matrix.arch == 'x64' && 'amd64' || matrix.arch }}_macos
          path: ./out/make/**/*

  build-linux:
    strategy:
      matrix:
        include:
          - arch: x64
            os: ubuntu-latest
          - arch: arm64
            os: ubuntu-24.04-arm
    runs-on: ${{ matrix.os }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build Linux ${{ matrix.arch }}
        run: npm run make
        env:
          ELECTRON_BUILDER_ARCH: ${{ matrix.arch }}

      - name: Upload Linux ${{ matrix.arch }} artifacts
        uses: actions/upload-artifact@v4
        with:
          name: apksignergui_${{ github.ref_name || 'dev' }}_${{ matrix.arch == 'x64' && 'amd64' || matrix.arch }}_linux
          path: ./out/make/**/*
+++++++ REPLACE</div>
</replace_in_file>

让我也更新一下 build.yml 中的 matrix 配置，使 artifact 名称更加清晰：

<replace_in_file>
<path>.github/workflows/build.yml</path>
<diff>------- SEARCH
        include:
          # Windows builds
          - os: windows-latest
            platform: win32
            arch: x64
            name: Windows x64
            artifact_name: windows-x64
          - os: windows-latest
            platform: win32
            arch: arm64
            name: Windows ARM64
            artifact_name: windows-arm64
          
          # macOS builds
          - os: macos-latest
            platform: darwin
            arch: x64
            name: macOS Intel
            artifact_name: macos-x64
          - os: macos-latest
            platform: darwin
            arch: arm64
            name: macOS Apple Silicon
            artifact_name: macos-arm64
          
          # Linux builds
          - os: ubuntu-latest
            platform: linux
            arch: x64
            name: Linux x64
            artifact_name: linux-x64
          - os: ubuntu-latest
            platform: linux
            arch: arm64
            name: Linux ARM64
            artifact_name: linux-arm64
=======
        include:
          # Windows builds
          - os: windows-latest
            platform: win32
            arch: x64
            name: Windows x64
            platform_name: windows
          - os: windows-latest
            platform: win32
            arch: arm64
            name: Windows ARM64
            platform_name: windows
          
          # macOS builds
          - os: macos-latest
            platform: darwin
            arch: x64
            name: macOS Intel
            platform_name: macos
          - os: macos-latest
            platform: darwin
            arch: arm64
            name: macOS Apple Silicon
            platform_name: macos
          
          # Linux builds
          - os: ubuntu-latest
            platform: linux
            arch: x64
            name: Linux x64
            platform_name: linux
          - os: ubuntu-latest
            platform: linux
            arch: arm64
            name: Linux ARM64
            platform_name: linux

